{
  "openapi": "3.1.0",
  "info": {
    "title": "DBS Ticketing EAI API",
    "description": "Zammad vorgeschaltete EAI, über die die Kommunikation anderer Systeme mit Zammad abläuft.\n\nHas two subsets of API - one <b>internal</b> and one <b>external</b>. The external API are Endpoints that are exposed via API-Gateways to the internet,while the internal API is being used solely by internal services.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://dbs-ticketing-eai-test-dbs-ticketing-eai.apps.capk.muenchen.de",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Attachments (external)",
      "description": "Endpoints to receive Attachment-Data for downloading."
    },
    {
      "name": "Tickets (external)",
      "description": "Reading tickets with a reduced dataset to be exposed to the internet."
    },
    {
      "name": "Articles (external)",
      "description": "Reading Articles with a reduced data set and a restricted way of creating new articles to be exposed to the internet."
    }
  ],
  "paths": {
    "/extern/tickets/{ticketID}/articles": {
      "post": {
        "tags": [
          "Articles (external)"
        ],
        "summary": "Create a new Article for a given Ticket.",
        "description": "User can be identified  by lhmExtId OR User-ID.\nExposes a reduced set of available attributes.\n\nAuthorization: WRITE_TICKETS\n",
        "operationId": "createNewArticleExtern",
        "parameters": [
          {
            "name": "ticketID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lhmExtID",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dpass",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authlevel",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "default": "level1"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArticleDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArticleExternal"
                }
              }
            }
          }
        },
        "security": [
          {
            "dbs-ticketing-eai-secscheme": []
          }
        ]
      }
    },
    "/extern/tickets": {
      "get": {
        "tags": [
          "Tickets (external)"
        ],
        "summary": "Get all Tickets by user.",
        "description": "User can be identified  by lhmExtId.\nExposes a reduced set of attributes.\n\nAuthorization: READ_TICKETS\n",
        "operationId": "getAllTicketsByUserExtern",
        "parameters": [
          {
            "name": "lhmExtID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authlevel",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "default": "level1"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number of the paged results.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of elements in one page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field to sort the results by.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Ordering 'asc' or 'desc.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketExternal"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "dbs-ticketing-eai-secscheme": []
          }
        ]
      }
    },
    "/extern/tickets/count": {
      "get": {
        "tags": [
          "Tickets (external)"
        ],
        "summary": "Get total number of tickets of a user.",
        "description": "User can be identified  by lhmExtId.\nExposes a reduced set of attributes.\n\nAuthorization: READ_TICKETS\n",
        "operationId": "getTicketCountByUserExtern",
        "parameters": [
          {
            "name": "lhmExtID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TotalCount"
                }
              }
            }
          }
        },
        "security": [
          {
            "dbs-ticketing-eai-secscheme": []
          }
        ]
      }
    },
    "/extern/tickets/byNummer/{ticketNumber}": {
      "get": {
        "tags": [
          "Tickets (external)"
        ],
        "summary": "Get specific Ticket by Ticket-Nummer.",
        "description": "User can be identified  by lhmExtId OR User-ID.\nExposes a reduced set of attributes.\n\n\nAuthorization: READ_TICKETS\n",
        "operationId": "getTicketByNumberWithUserExternal",
        "parameters": [
          {
            "name": "ticketNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lhmExtID",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dpass",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authlevel",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "default": "level1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TicketExternal"
                }
              }
            }
          }
        },
        "security": [
          {
            "dbs-ticketing-eai-secscheme": []
          }
        ]
      }
    },
    "/extern/tickets/byId/{ticketID}": {
      "get": {
        "tags": [
          "Tickets (external)"
        ],
        "summary": "Get specific Ticket by Ticket-ID.",
        "description": "User can be identified  by lhmExtId OR User-ID.\nExposes a reduced set of attributes.\n\nAuthorization: READ_TICKETS\n",
        "operationId": "getTicketByIdWithUserExtern",
        "parameters": [
          {
            "name": "ticketID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lhmExtID",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dpass",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authlevel",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "default": "level1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TicketExternal"
                }
              }
            }
          }
        },
        "security": [
          {
            "dbs-ticketing-eai-secscheme": []
          }
        ]
      }
    },
    "/extern/attachments/{ticketID}/{articleID}/{attachmentID}": {
      "get": {
        "tags": [
          "Attachments (external)"
        ],
        "summary": "Get Attachment of given article id from given ticket id by given attachment id.",
        "description": "Receives the attachment with the ID attachmentID of the article articleID from the ticket ticketID and forwards it as a binary data stream.",
        "operationId": "getAttachment",
        "parameters": [
          {
            "name": "ticketID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "articleID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lhmExtID",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dpass",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Attachment as binary data.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "dbs-ticketing-eai-secscheme": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ArticleAttachment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "mime-type": {
            "type": "string"
          },
          "preferences": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          }
        }
      },
      "CreateArticleDTO": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "content_type": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "email",
              "phone",
              "web",
              "note",
              "sms",
              "chat",
              "fax"
            ]
          },
          "internal": {
            "type": "boolean"
          },
          "sender": {
            "type": "string",
            "enum": [
              "Agent",
              "Customer",
              "System"
            ]
          },
          "time_unit": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "cc": {
            "type": "string"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArticleAttachment"
            }
          }
        }
      },
      "ArticleExternal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ticket_id": {
            "type": "string"
          },
          "type_id": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "reply_to": {
            "type": "string"
          },
          "content_type": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArticleAttachment"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "email",
              "phone",
              "web",
              "note",
              "sms",
              "chat",
              "fax"
            ]
          },
          "sender": {
            "type": "string",
            "enum": [
              "Agent",
              "Customer",
              "System"
            ]
          },
          "from": {
            "type": "string"
          }
        }
      },
      "TicketExternal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "priority_id": {
            "type": "string"
          },
          "state_id": {
            "type": "string"
          },
          "state_external": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "organization_id": {
            "type": "string"
          },
          "organizationName": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "last_contact_at": {
            "type": "string",
            "format": "date-time"
          },
          "pending_time": {
            "type": "string"
          },
          "close_at": {
            "type": "string",
            "format": "date-time"
          },
          "article_count": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "article_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "durchschnittliche_bearbeitungsdauer": {
            "type": "string"
          },
          "additionalData": {
            "type": "object",
            "additionalProperties": {}
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArticleExternal"
            }
          }
        }
      },
      "TotalCount": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "securitySchemes": {
      "dbs-ticketing-eai-secscheme": {
        "type": "openIdConnect",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "openIdConnectUrl": "https://ssotest.muenchen.de/auth/realms/intrap/.well-known/openid-configuration"
      }
    }
  }
}